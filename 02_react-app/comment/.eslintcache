[{"D:\\CODE\\react\\02_react-app\\comment\\src\\index.js":"1","D:\\CODE\\react\\02_react-app\\comment\\src\\comment-list\\comment-list.jsx":"2","D:\\CODE\\react\\02_react-app\\comment\\src\\app\\app.jsx":"3","D:\\CODE\\react\\02_react-app\\comment\\src\\comment-item\\comment-item.jsx":"4","D:\\CODE\\react\\02_react-app\\comment\\src\\comment-add\\comment-add.jsx":"5"},{"size":155,"mtime":1666578911942,"results":"6","hashOfConfig":"7"},{"size":1088,"mtime":1666582613768,"results":"8","hashOfConfig":"7"},{"size":1466,"mtime":1666581947612,"results":"9","hashOfConfig":"7"},{"size":985,"mtime":1666582504869,"results":"10","hashOfConfig":"7"},{"size":2042,"mtime":1666581499928,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j9lo1o",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"D:\\CODE\\react\\02_react-app\\comment\\src\\index.js",[],"D:\\CODE\\react\\02_react-app\\comment\\src\\comment-list\\comment-list.jsx",[],"D:\\CODE\\react\\02_react-app\\comment\\src\\app\\app.jsx",[],"D:\\CODE\\react\\02_react-app\\comment\\src\\comment-item\\comment-item.jsx",["23"],"D:\\CODE\\react\\02_react-app\\comment\\src\\comment-add\\comment-add.jsx",["24"],"import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nexport default class ComponentAdd extends React.Component {\r\n  static propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    userName: \"\",\r\n    content: \"\",\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  // 箭头函数不需要在 constructor 进行绑定 this.add = this.add.bind(this)\r\n  add = () => {\r\n    const { userName, content } = this.state;\r\n    const { addComment } = this.props;\r\n    addComment(userName, content);\r\n\r\n    // 清空输入框\r\n    this.setState({\r\n      userName: \"\",\r\n      content: \"\",\r\n    });\r\n  };\r\n  changeUserName = (e) => {\r\n    const userName = e.target.value;\r\n    this.setState({ userName });\r\n  };\r\n  changeContent = (e) => {\r\n    const content = e.target.value;\r\n    this.setState({ content });\r\n  };\r\n\r\n  render() {\r\n    const { userName, content } = this.state;\r\n    return (\r\n      <div className=\"col-md-4\">\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>用户名</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"用户名\"\r\n              value={userName}\r\n              onChange={this.changeUserName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>评论内容</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              rows=\"6\"\r\n              placeholder=\"评论内容\"\r\n              value={content}\r\n              onChange={this.changeContent}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-offset-2 col-sm-10\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default pull-right\"\r\n                onClick={this.add}\r\n              >\r\n                提交\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"25","severity":1,"message":"26","line":23,"column":13,"nodeType":"27","endLine":23,"endColumn":47},{"ruleId":"28","severity":1,"message":"29","line":12,"column":3,"nodeType":"30","messageId":"31","endLine":14,"endColumn":4},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]